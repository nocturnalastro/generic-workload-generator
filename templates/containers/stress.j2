{%- from "bases/macros.j2" import lookup with context -%}
{%- from "bases/macros.j2" import volume_mounts with context -%}
{%- macro stress_container(prefix) %}
-
    {% if (lookup(prefix + "_extra_vars")| default({}) | length) > 0 or lookup(prefix+ "_cpu_stress") or  lookup('prefix'+ "mem_stress") -%}
    env:
        {% if (lookup(prefix + "_extra_vars")| default({}) | length) > 0 -%}
        {{ lookup(prefix + "_extra_vars") | from_yaml | to_yaml | indent(8) | trim }}
        {%- endif -%}
        {% if lookup(prefix+ "_cpu_stress") %}
        -   name: "stress_cpu"
            value: {{ lookup(prefix+ "_cpu_stress") }}
        {% endif -%}
        {% if lookup('prefix'+ "mem_stress") %}
        -   name: "stress_vm-bytes"
            value: {{ lookup('prefix'+ "mem_stress") }}
        {% endif -%}
    {%- endif %}
    image: "ghcr.io/abraham2512/fedora-stress-ng:master"
    imagePullPolicy: IfNotPresent
    livenessProbe:
        httpGet:
            path: "/healthz"
            port: 8080
    resources:
        limits:
            cpu: {{ lookup(prefix + "_limit_cpu_count") }}
            memory: {{ lookup(prefix + "_limit_memory") }}
        requests:
            cpu: {{ lookup(prefix + "_requested_cpu_count") }}
            memory: {{ lookup(prefix + "_requested_memory") }}
    securityContext:
        allowPrivilegeEscalation: false
        capabilities:
            drop:
            - ALL
            - MKNOD
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
    {%- if (volumes | default([]) | length) > 0 -%}
    {%- set vmounts =  volume_mounts(volumes, ["stress", prefix + "_stress"]) -%}
    {%- if (vmounts | length) > 0 %}
    volumeMounts:
        {{ vmounts | indent(10) }}
    {%- endif -%}
    {%- endif -%}
{% endmacro %}